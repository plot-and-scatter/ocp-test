kind: Template
apiVersion: v1
objects:
  - apiVersion: v1
    kind: Service
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deployment: ${NAME}
      sessionAffinity: None
      type: ClusterIP
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      labels:
        app: ${NAME}
        app.kubernetes.io/component: ${NAME}
        app.kubernetes.io/instance: ${NAME}
      managedFields:
        - apiVersion: v1
          fieldsType: FieldsV1
          fieldsV1:
            'f:metadata':
              'f:annotations':
                .: {}
                'f:openshift.io/generated-by': {}
              'f:labels':
                .: {}
                'f:app': {}
                'f:app.kubernetes.io/component': {}
                'f:app.kubernetes.io/instance': {}
            'f:spec':
              'f:ports':
                .: {}
                'k:{"port":8080,"protocol":"TCP"}':
                  .: {}
                  'f:name': {}
                  'f:port': {}
                  'f:protocol': {}
                  'f:targetPort': {}
              'f:selector':
                .: {}
                'f:deployment': {}
              'f:sessionAffinity': {}
              'f:type': {}
          manager: oc
          operation: Update
          time: '2021-10-01T04:57:28Z'
      name: ${NAME}
  - apiVersion: apps/v1
    kind: Deployment
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          deployment: ${NAME}
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            openshift.io/generated-by: OpenShiftNewApp
          creationTimestamp: null
          labels:
            deployment: ${NAME}
        spec:
          containers:
            - image: >-
                image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/${NAME}@sha256:a3288065ec0b1fcbaa3ad44331168e804368dfed6e7d8bb3e3e2e3cb1d6539e1
              imagePullPolicy: IfNotPresent
              name: ${NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
              volumeMounts:
              - name: config-volume
                mountPath: /opt/app-root/app/config
              - name: secret-volume
                mountPath: /opt/app-root/app/secret
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          volumes:
          - name: config-volume
            configMap:
              name: ${NAME}-config
          - name: secret-volume
            secret:
              secretName: ${NAME}-secret
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    metadata:
      annotations:
        deployment.kubernetes.io/revision: '2'
        image.openshift.io/triggers: >-
          [{"from":{"kind":"ImageStreamTag","name":"${NAME}:${IMAGE_TAG}","namespace":"${NAMESPACE}"},"fieldPath":"spec.template.spec.containers[?(@.name==\"${NAME}\")].image"}]
        openshift.io/generated-by: OpenShiftNewApp
      generation: 2
      labels:
        app: ${NAME}
        app.kubernetes.io/component: ${NAME}
        app.kubernetes.io/instance: ${NAME}
      managedFields:
        - apiVersion: apps/v1
          fieldsType: FieldsV1
          fieldsV1:
            'f:metadata':
              'f:annotations':
                .: {}
                'f:image.openshift.io/triggers': {}
                'f:openshift.io/generated-by': {}
              'f:labels':
                .: {}
                'f:app': {}
                'f:app.kubernetes.io/component': {}
                'f:app.kubernetes.io/instance': {}
            'f:spec':
              'f:progressDeadlineSeconds': {}
              'f:replicas': {}
              'f:revisionHistoryLimit': {}
              'f:selector':
                'f:matchLabels':
                  .: {}
                  'f:deployment': {}
              'f:strategy':
                'f:rollingUpdate':
                  .: {}
                  'f:maxSurge': {}
                  'f:maxUnavailable': {}
                'f:type': {}
              'f:template':
                'f:metadata':
                  'f:annotations':
                    .: {}
                    'f:openshift.io/generated-by': {}
                  'f:labels':
                    .: {}
                    'f:deployment': {}
                'f:spec':
                  'f:containers':
                    'k:{"name":"${NAME}"}':
                      .: {}
                      'f:imagePullPolicy': {}
                      'f:name': {}
                      'f:ports':
                        .: {}
                        'k:{"containerPort":8080,"protocol":"TCP"}':
                          .: {}
                          'f:containerPort': {}
                          'f:protocol': {}
                      'f:resources': {}
                      'f:terminationMessagePath': {}
                      'f:terminationMessagePolicy': {}
                  'f:dnsPolicy': {}
                  'f:restartPolicy': {}
                  'f:schedulerName': {}
                  'f:securityContext': {}
                  'f:terminationGracePeriodSeconds': {}
          manager: oc
          operation: Update
          time: '2021-10-01T04:57:28Z'
        - apiVersion: apps/v1
          fieldsType: FieldsV1
          fieldsV1:
            'f:spec':
              'f:template':
                'f:spec':
                  'f:containers':
                    'k:{"name":"${NAME}"}':
                      'f:image': {}
          manager: openshift-controller-manager
          operation: Update
          time: '2021-10-01T04:57:28Z'
        - apiVersion: apps/v1
          fieldsType: FieldsV1
          fieldsV1:
            'f:metadata':
              'f:annotations':
                'f:deployment.kubernetes.io/revision': {}
            'f:status':
              'f:availableReplicas': {}
              'f:conditions':
                .: {}
                'k:{"type":"Available"}':
                  .: {}
                  'f:lastTransitionTime': {}
                  'f:lastUpdateTime': {}
                  'f:message': {}
                  'f:reason': {}
                  'f:status': {}
                  'f:type': {}
                'k:{"type":"Progressing"}':
                  .: {}
                  'f:lastTransitionTime': {}
                  'f:lastUpdateTime': {}
                  'f:message': {}
                  'f:reason': {}
                  'f:status': {}
                  'f:type': {}
              'f:observedGeneration': {}
              'f:readyReplicas': {}
              'f:replicas': {}
              'f:updatedReplicas': {}
          manager: kube-controller-manager
          operation: Update
          time: '2021-10-01T04:57:42Z'
      name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    spec:
      host: ${NAME}-${NAMESPACE}.${BASE_OPENSHIFT_URL}
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${NAME}
        weight: 100
      wildcardPolicy: None
    metadata:
      annotations:
        openshift.io/host.generated: 'true'
      labels:
        app: ${NAME}
        app.kubernetes.io/component: ${NAME}
        app.kubernetes.io/instance: ${NAME}
      managedFields:
        - apiVersion: route.openshift.io/v1
          fieldsType: FieldsV1
          fieldsV1:
            'f:metadata':
              'f:labels':
                .: {}
                'f:app': {}
                'f:app.kubernetes.io/component': {}
                'f:app.kubernetes.io/instance': {}
            'f:spec':
              'f:port':
                .: {}
                'f:targetPort': {}
              'f:to':
                'f:kind': {}
                'f:name': {}
                'f:weight': {}
              'f:wildcardPolicy': {}
          manager: kubectl-expose
          operation: Update
          time: '2021-10-01T04:58:38Z'
        - apiVersion: route.openshift.io/v1
          fieldsType: FieldsV1
          fieldsV1:
            'f:status':
              'f:ingress': {}
          manager: openshift-router
          operation: Update
          time: '2021-10-01T04:58:38Z'
      name: ${NAME}
  - apiVersion: v1
    data:
      appsettings.json: |-
        {
          "Logging": {
            "LogLevel": {
              "Default": "Information",
              "Microsoft": "Warning",
              "Microsoft.Hosting.Lifetime": "Information"
            }
          },
          "ForecastPrefix": {
            "PrefixText": "Suspiciously",
            "ConfigMapText": "ConfigMap"
          }
        }
    kind: ConfigMap
    metadata:
      labels:
        app: ${NAME}
      managedFields:
      - apiVersion: v1
        fieldsType: FieldsV1
        fieldsV1:
          f:data:
            .: {}
            f:appsettings.json: {}
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
        manager: Mozilla
        operation: Update
        time: "2021-10-01T17:38:29Z"
      name: ${NAME}-config
      namespace: ${NAMESPACE}
parameters:
- name: NAMESPACE
  required: true
  description: The namespace in which to deploy
- name: NAME
  required: true
  description: The name of the components
- name: IMAGE_TAG
  required: true
  description: The output image stream tag
- name: BASE_OPENSHIFT_URL
  required: true
  description: The base URL for Openshift