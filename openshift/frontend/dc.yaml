kind: Template
apiVersion: v1
objects:
  - apiVersion: v1
    kind: Service
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: 8443-tcp
          port: 8443
          protocol: TCP
          targetPort: 8443
      selector:
        deployment: ${NAME}
      sessionAffinity: None
      type: ClusterIP
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      labels:
        app: ${NAME}
        app.kubernetes.io/component: ${NAME}
        app.kubernetes.io/instance: ${NAME}
      name: ${NAME}
  - apiVersion: apps/v1
    kind: Deployment
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          deployment: ${NAME}
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            openshift.io/generated-by: OpenShiftNewApp
          creationTimestamp: null
          labels:
            deployment: ${NAME}
        spec:
          containers:
            - image: >-
                image-registry.openshift-image-registry.svc:5000/${TOOLS_NAMESPACE}/${NAME}@sha256:83316b6e5ae76e5cb5b52979776a866a06aec3d4145820b5214432f6806c0eb2
              imagePullPolicy: IfNotPresent
              name: ${NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8443
                  protocol: TCP
              volumeMounts:
              - name: config-volume
                mountPath: /opt/app-root/src/config
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          volumes:
          - name: config-volume
            configMap:
              defaultMode: 420
              name: ${NAME}-config
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
    metadata:
      annotations:
        deployment.kubernetes.io/revision: '2'
        image.openshift.io/triggers: >-
          [{"from":{"kind":"ImageStreamTag","name":"${NAME}:${IMAGE_TAG}","namespace":"${TOOLS_NAMESPACE}"},"fieldPath":"spec.template.spec.containers[?(@.name==\"${NAME}\")].image"}]
        openshift.io/generated-by: OpenShiftNewApp
      generation: 2
      labels:
        app: ${NAME}
        app.kubernetes.io/component: ${NAME}
        app.kubernetes.io/instance: ${NAME}
      name: ${NAME}
  - apiVersion: route.openshift.io/v1
    kind: Route
    spec:
      host: ${NAME}-${NAMESPACE}.${BASE_OPENSHIFT_URL}
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${NAME}
        weight: 100
      wildcardPolicy: None
    metadata:
      annotations:
        openshift.io/host.generated: 'true'
      labels:
        app: ${NAME}
        app.kubernetes.io/component: ${NAME}
        app.kubernetes.io/instance: ${NAME}
      name: ${NAME}-${NAMESPACE}
  - apiVersion: v1
    data:
      __ENV.js: >-
        window.__ENV = {"REACT_APP_API_URL": "http://${NAME}-${NAMESPACE}.${BASE_OPENSHIFT_URL}/"}
    kind: ConfigMap
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}-config
parameters:
- name: TOOLS_NAMESPACE
  required: true
  description: The tools namespace (where the images are built)  
- name: NAMESPACE
  required: true
  description: The namespace in which to deploy
- name: NAME
  required: true
  description: The name of the components
- name: IMAGE_TAG
  required: true
  description: The output image stream tag
- name: BASE_OPENSHIFT_URL
  required: true
  description: The base URL for Openshift